#!/bin/sh
# - test

## blktests is a test framework for the Linux kernel block layer and storage stack.

. $LKP_SRC/lib/env.sh
. $LKP_SRC/lib/job.sh
. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/upload.sh
. $LKP_SRC/lib/reproduce-log.sh
. $LKP_SRC/lib/tests/common.sh

blktest_dir=$BENCHMARK_ROOT/blktests
cd $BENCHMARK_ROOT/blktests || die "fail to cd $BENCHMARK_ROOT/blktests"

arrange_group()
{
	[ "$test" = "other" ] && return

	ls tests/${test%-*}/ | grep -P '^\d+$' > tests/$test
	case "$test" in
	block-group1)
		sed -i "9,\$d" tests/$test || return
		;;
	block-group2)
		sed -i "1,8d" tests/$test || return
		;;
	nvme-005)
		echo "005" > tests/$test || return
		;;
	nvme-group1)
		sed -i "/^005$/d" tests/$test || return
		;;
	*)
		;;
	esac
}

install_blktests()
{
	local BLKTEST_REPO="https://github.com/osandov/blktests.git"
	[ "$LKP_LOCAL_RUN" != "1" ] && BLKTEST_REPO="git://gitmirror/blktests"

	[ "$blktests_commit" ] || return
	cd $blktest_dir
	git clone $BLKTEST_REPO 2>&1 || return
	cd $blktest_dir/blktests
	git checkout -f $blktests_commit 2>&1 || return

	make || return
	# run the test as group
	arrange_group
}

has_new_test()
{
	ls tests > tests/$test || return
	# if has any other test suite besides these known tests, write into file: other
	known_test="block\|loop\|meta\|nvmeof-mp\|nbd\|nvme\|scsi\|srp\|zbd\|other"
	sed -i "/\<\($known_test\)\>/d" tests/$test || return
	[ -s tests/$test ] && return
	# if don't have new test suite, exit
	echo "check new test: no [ignored by lkp]" && return 1
}

set_env()
{
	local partition
	case "$test" in
	nbd-group*|loop-group*)
		partition=""
		;;
	nvme-005)
		modprobe -r nvme
		partition=""
		;;
	scsi-group*)
		partition=${partitions%% *}
		is_virt && partition=$(echo "$partition" | sed 's/[0-9]*$//g')
		;;
	*)
		partition=${partitions%% *}
		;;
	esac

	if [ -n "$partition" ]; then
		echo "TEST_DEVS=$partition" > config
		[ "$test" = "nvme-group1" ] && log_cmd mkdir -p /mnt/$test && log_cmd mount $partition /mnt/$test
	fi

       # fix the issue: losetup: cannot find an unused loop device
       lsmod | grep -q loop || modprobe loop

	# fix blkzone is not available
	ln -sf $blktest_dir/util-linux/blkzone /usr/bin/blkzone
}

run_test()
{
	local test_dir="$blktest_dir/blktests/tests"
	local test_ignore="$LKP_SRC/pack/blktests-addon/tests/${test%-*}-ignore"
	local ignored_tests
	local ignored_tests_cmd
	local all_tests
	local all_tests_cmd

	if [ "${test%[a-z4]-[0-9][0-9][0-9]}" != "$test" ]; then # single test
		all_tests_cmd="echo ${test%-*}/${test#*-}"
		get_ignored_and_worked_tests "$all_tests_cmd"
	elif [ "${test#*-}" != "$test" ]; then # group tests
		all_tests_cmd="sed \"s:^:${test%-*}/:\" $test_dir/$test"
		get_ignored_and_worked_tests "$all_tests_cmd" "$test_ignore"
	elif [ "$test" = "other" ]; then #group other
		all_tests=$(cat $test_dir/$test)
	else
		all_tests="$test"
	fi

	[ -n "$ignored_tests_cmd" ] && log_echo $ignored_tests_cmd
	for ignored_test in $ignored_tests
	do
		echo "$ignored_test [ignored by lkp]"
	done

	[ -n "$all_tests_cmd" ] && log_echo $all_tests_cmd
	if [ "$test" = "nvme-group1" ]; then
		log_cmd ./check -o /mnt/$test $all_tests
	else
		log_cmd ./check $all_tests
	fi
}

install_blktests || die
[ "$test" = "other" ] && {
	# if don't have new test suite, exit
	has_new_test || exit 0
}
read_env_vars
set_env
run_test
exit_value=$?

[ -d results ] && upload_files -t results $blktest_dir/blktests/results/*
exit $exit_value
